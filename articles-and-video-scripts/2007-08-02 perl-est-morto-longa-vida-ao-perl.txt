
Original: O’Reilly (I also got the permission of both O’Reilly and JT Smith for this translation)
Eu confesso, li o artigo por causa do título. Bom truque :-) Mas o artigo é realmente bom e acho que está em tempo de dar uma resposta a todos os xiitas de plantão, inclusive Railers-xiitas. Todos os dias alguém está discutindo “Java é melhor”, “PHP é mais maduro”, “C é imbatível”, “Smalltalk é o novo futuro”. O maior problema dos trolls de plantão, a meu ver, se resume a uma: são pessoas que não conseguem aprender mais de uma linguagem.
É como um cozinheiro que só sabe fazer um bom prato e nada mais. E novamente eu repito: para alguma coisa ser boa, o outro não precisa ser ruim. Um pouco exacerbado, concordo, mas mesmo assim um bom texto para traduzir. Sempre é bom dar um outro lado da moeda.


Por chromatic : JT Smith, presidente da Plain Black, o criador do WebGUI, e um dos cantarolados sucessos do uso de Perl em negócios, recentemente me enviou este artigo. Ele me deu permissão para publicar na íntegra aqui.
Parece que todos os dias sou questionado sobre porque escrevo em Perl em vez de PHP, Java, C#, Ruby, Python ou [insira sua linguagem favorita aqui]. As pessoas dizem coisas como “Perl não é usado mais, é?” ou “Ruby on Rails é tudo que eu leio hoje em dia.” Enquanto escrevo isso, existem milhões de programadores Perl pelo mundo. Perl 5 é mantido ativamente, e Perl 6 está em desenvolvimento. Mais de 3 mil módulos Perl foram lançados em 2006, e mais do dobro disso está para ser lançado este ano. A realidade é que Perl está longe de estar morto.
Digamos, por um segundo, que Perl realmente está morrendo. Mesmo que isso fosse verdade, seria uma morte lenta durante anos a fio. A razão? Empresas tem bilhões de dólares investidos em aplicações de missão crítica escritas em Perl que não podem ser facilmente trocadas. Para efeitos de comparação, as pessoas vêm dizendo que Cobol está morto há mais de 20 anos, mas existem mais de mil empregos de Cobol por mês publicados no Monster.com (site de empregos), e mais de 5 mil por mês para Perl.
Nos últimos cinco anos o uso de Perl cresceu quase 700%. Isso leva as pessoas a questionar porque parece que a parcela de mercado de Perl está caindo. A resposta é porque tipicamente eles medem a parcela de mercado de desenvolvimento de web sites, e a porcentagem da web programada em Perl está encolhendo. Isso se deve às pessoas não usando Perl? Não. Absolutamente não. Em vez disso, o caso é que há muitos web sites e muitas opções de linguagens de programação. Dez anos atrás quase todas as aplicações Web eram escritas ou em Perl ou C, mas desde então dúzias de novas linguagens começaram a pegar. Somando-se a isso, existem cerca de 20 milhões de novos sites criados todo ano. Mesmo que o número de sites criados em Perl dobre a cada ano, olhando por porcentagem faz parecer que os números estão encolhendo.
Ainda não acredita em mim? Bem, que tal examinarmos uma pequena fatia de web sites realmente grandes que tenho certeza que você já ouviu falar e já usou que são ou totalmente escritos em Perl ou tem porções significativas escritas em Perl: Yahoo!, Amazon, TicketMaster, The United States Department of State, The BBC, Slashdot e Shopzilla. Já ouviu falar desses? Imaginei.
Para responder à parte da equação do “Por que Perl?”, primeiro me deixe dizer que Perl foi planejado para ser uma linguagem de processamento de textos ultra flexível. O que é a Internet se não texto? Praticamente todo protocolo e padrão de documentos que você interage na web é apenas texto. HTML, HTTP, SMTP, XML, CSS, Javascript … isso mesmo, tudo texto! Só pode ser lógico escolher uma linguagem de programação que foi planejado especificamente para processamento de textos quando se está trabalhando na Internet. Java e C# foram planejados para serem linguagens genéricas, do tipo “faz-tudo”. PHP, ASP, Cold Fusion e JSP foram todas planejadas apenas para a Web. Ruby e Python também são boas escolhas, mas eles não tem nem perto da grande biblioteca de código que Perl.
Além de ser uma grande linguagem de processamento de texto, Perl dá uma abundância de possibilidades de flexibilidade de código. Ele tem plugins para suportar e manipular uma variedade de formatos de arquivos binários, incluindo várias formas de encriptação, compressão e imagens. O Comprehensive Perl Archive Network (CPAN) dá aos codificadores milhares de módulos de fácil download que fazem tudo, desde escrever serviços de rede até parsing de documentos Microsoft Excel. Perl também foi compilado para trabalhar em dúzias de plataformas de hardware e sistemas operacionais que permite escrever código uma vez e rodar em virtualmente qualquer sistema. E além dessa compatibilidade, Perl foi altamente integrado no Apache Web Server na forma do mod_perl, o que significa que Perl pode fazer qualquer coisa que o Apache faz.
Se Perl está morto, então é de longe a mais vital, ativa e útil linguagem de programação morta que já vi. Perl está, de fato, vivo e crescendo, e serve de forma única a uma variedade de projetos de programação com sua flexibilidade, poder e extensiva base de código. Eu escrevo em Perl porque ele dá tudo que se precisa para suportar aplicações corporativas. Eu escrevo em Perl porque está sendo ativamente mantido e desenvolvido. Eu escrevo em Perl porque nada mais faz o trabalho ficar pronto melhor: longa vida ao Perl.
tags: obsolete perl

