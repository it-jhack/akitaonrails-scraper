



Um amigo meu acabou de avisar deste post no site oficial do RadRails. Para quem não conhece RadRails é uma das IDEs mais famosas para Rails, usando (pasmem!) a tradicional plataforma Eclipse, escrita em Java, para abrir as portas para desenvolvedores Rails. E agora até a poderosa SAP começou a dar ouvidos a esse movimento. Depois do apoio da IBM tanto à RubyCentral como com o lançamento do pacote Starter Toolkit for DB2 on Rails, agora é a vez da SAP.
A coincidência é que esse post levanta assuntos que felizmente me adiantei na época em que escrevi meu livro (aguardem!). Primeiro de tudo: fiz bem em usar Mac para escrever o livro e testar todo o código, pois como disse no post de ontem, a Apple demonstrou apoio incondicional a Rails trazendo suporte total a ela na versão Leopard do Mac OS X.
Além disso também escrevi um capítulo exclusivo sobre a SAP, contando sua história, suas tecnologias e Piers Harding (que também é mencionado nesse post da RadRails) me ajudou diretamente na confecção desse capítulo, que fala justamente sobre o conector que ele escreveu, que permite integrar Ruby com SAP.
Finalmente, a menção do Mongrel, que cada vez mais está se firmando com o melhor servidor para rodar Rails. Felizmente também me adiantei a isso enquanto escrevia o livro, dedicando um capítulo inteiro apenas a ele.
Vejam a tradução do post:
A SAP convidou o time do RadRails aqui a Zurich para falar na TechEd Amsterdam em Outubro. Nós estivemos falando com o pessoal da SAP nos últimos meses porque eles estão começando a formar uma grande estratégia para suportar linguagens de script dentro de sua plataforma. Piers Harding escreveu um conector que possibilita dados SAP no framework Rails. Os dados funcionam; esse é o primeiro passo.
O próximo passo é fazer meio milhão de desenvolvedores SAP saberem o que é Rails e como ele pode torná-los mais produtivos. Nossa sessão em Amsterdam será um passo-a-passo de como podem facilmente usar Rails como o frontend para os dados SAP. Matt e eu construiremos um aplicativo ao vivo e estaremos ao redor para falar e evangelizar sua simplicidade.
O objetivo final estratégico depois que sua rede de desenvolvedores aprendam como tirar vantagem de scripts é tornar os deployments triviais. Precisamos trabalhar juntos para atingir um ponto onde o time de desenvolvimento possa passar um aplicativo Rails para administradores de sistemas, que não conhecem nada a não ser seu deploy. Vejo isso como uma missão maior para trazer linguagens de script ao páreo contra os containers .Net e J2EE. Precisamos parar de viver em um mundo com apenas duas opções “enterprise” de deployment. Rails finalmente se encaixa na aceita pilha Apache com Mongrel e o apoio da Apple ontem certamente reforça isso. SAP tem uma grande oportunidade de fazer isso com sua plataforma e espero falar extensivamente sobre como derrubar esse muro na TechEd.
Esse tipo de interação com a SAP é a razão de porque começamos RadRails. Nosso objetivo é fazer desenvolvedores felizes e deixe me dizer isso: desenvolvedores enterprise estão sofrendo muita dor. Esperamos que RadRails possibilite Rails de escorregar ainda mais no mundo enterprise e seja a porta de entrada para desenvolvedores Java/.Net.
tags: obsolete sap ide

