
Essa semana foi cheia de brigas :-) Na nossa comunidade local, “RoR vs .NET”, depois Obie com “RoR vs Java”. Depois um artigo Sobre a performance de JRuby e CPython. E agora, na própria O’Reilly: 7 Razões porque eu voltei para PHP depois de 2 anos de Rails.


Como Ola Bini disse em seu post, sobre a performance de JRuby e CPython, é praticamente para ignorar. Primeiro que o Alioth não é um pacote completo de testes, como eu já havia dito na minha palestra de JRuby. Charles Nutter e o JRuby Core Team já disseram isso. Segundo, comparar C com Java nunca é algo “fácil” de se fazer, primeiro porque muito da performance do Java só aparece quando o HotSpot tem a chance de otimizar. Em testes pequenos isolados isso pode não se refletir. Isso aparece quando você deixa um servidor rodando um pouco. Os primeiros acessos tendem a ser mais lentos e a partir daí o HotSpot irá agir. É uma das idéias por trás de Just in Time Compiling (JIT).
O segundo artigo sequer mereceria uma menção. Pelo menos o artigo do Obie foi motivado por um ácido senso de humor. Já Derek Sivers, do cdbaby.com basicamente relatou sua incompetência como gestor e como programador. Independente de todos os 7 pontos que ele indica a parte importante diz o seguinte: Seu site cdbaby.com era feito todo em PHP. Daí ele decidiu refazer tudo em Rails. Levou 2 anos e ele não conseguiu. Daí voltou a PHP e fez tudo em 2 meses.
“Ahá! PHP é MUITO mais produtivo que Rails.” Infelizmente, se ele fosse competente, em 2 anos poderia ter feito tudo em C puro e deveria ter acabado!! O cdbaby.com não é nenhum projeto da Nasa, é um básico e-commerce. Seja em Perl, Python, Ruby ou qualquer outra linguagem: 6 meses seria tempo demais. Mesmo se fosse J2EE ou .NET, 1 ano seria muito. O problema não é RoR ser ruim, não se encaixar no problema dele: é o fato dele ter deixado a coisa enrolar por 2 anos para depois dizer: “RoR não serve pra mim” em vez de assumir: “sou uma droga como gerente de projetos.”
O artigo é basicamente isso: um mal gerente/mal programador vai fracassar em qualquer projeto, não importa quanto tente. No fim ele fez tudo em PHP de novo. Não é novidade: ele já havia feito isso uma vez, não havia motivo de não fazer de novo. É a outra velha história: a grama muda de cor, a vaca morre de fome.
tags: obsolete fud

