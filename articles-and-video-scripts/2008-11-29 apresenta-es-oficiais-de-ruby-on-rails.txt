
Acho que já falamos exaustivamente da nova versão 2.2, que foi lançada alguns dias atrás. No geral, a única coisa realmente diferente que deve mudar a forma como você programa seus aplicativos é a Internacionalização. Teve muita mudança interna, como thread-safety, várias pequenas mudanças e adições que você pode conferir no PDF do Carlos Brando.
Mais interessante, para marcar o lançamento do 2.2, o Ryan Bates refez o screencast do famoso blog em 15 minutos que está agora na página de screencasts do site oficial. Já era hora deles finalmente atualizarem essa página pois o screencast original do DHH era da versão 1.0! Se interessarem, dêem uma olhada no screencast que eu tinha feito, alguns meses atrás sobre o mesmo assunto:



Mas mais importante do que isso, eu gostei muito dele ter adicionado mais palestras que ele fez. Em particular, duas que eu gosto bastante.
O primeiro é o keynote que o DHH fez na RailsConf 2008 Portland, entitulado The Great Surplus (infelizmente, o Blip.tv removeu este vídeo também). Em resumo, o DHH explica como o mercado Ruby on Rails é apenas uma pequena fração do grande mercado mundial de software, mas como mesmo assim muitos de nós estamos conseguindo ter ordens de grandeza de produtividade e estamos conseguindo ter sucesso. Mesmo com a festa parecendo muito boa para nós, é importante entender que esse almoço-grátis não vai durar para sempre. Muitas coisas podem acontecer, incluindo o Rails ser desafiado por alguma outra tecnologia ordens de grandeza melhor ou até mesmo desaparecer. Por isso é importante para nós, Railers, aproveitar este momento onde estamos bem com Rails para continuar evoluindo como programadores, aprendendo novas coisas e sempre nos tornando à prova de futuro.
É uma coisa que eu repito em todas as palestras que eu dou: um grandes especialista em uma única coisa, para mim, é simplesmente um amador em todas as demais coisas.
David Heinemeier Hansson’s keynote at RailsConf Europe 2008.
O segundo é o keynote que ele deu na RailsConf Europe 2008, em Berlim, entitulado Legacy Software. Muita gente entra de cabeça em Ruby on Rails acreditando que ele é o Salvador da Pátria. Basta usar Rails que as aplicações serão magicamente perfeitas. Nada feito em Rails se torna “legado”. Legado é Java, PHP, etc.
Esse é exatamente o jeito errado de se pensar sobre Rails. Eu digo isso em muitas das minhas palestras e pelo visto o DHH ouve as mesmas coisas por lá. O importante não é o Rails: é quem faz uso dele e como. E não tem jeito: todo software sempre vai virar legado. E isso tem que acontecer porque hoje, você faz o melhor software que consegue e para você está perfeito. Mas amanhã, você já aprendeu dezenas de coisas novas, e olhando de volta, é claro que você não vai gostar do seu código antigo. Pensará “porque eu fiz isso desse jeito se hoje tem maneiras melhores?” O você de hoje sempre será pior que o você de amanhã. Rails é uma ferramenta que vai ajudá-lo a resolver os problemas de hoje, mas isso não o torna capaz de prever os de amanhã. Para que seu código não se torne um daqueles legados horríveis, ele precisa evoluir junto com você.
O corolário disso é: se você acha que o código que você escreveu ontem ainda é bom, para mim significa apenas que você estagnou no tempo e não aprendeu nada de novo. Em breve você se tornará obsoleto, um legado.
Visitem a nova página de Screencasts para ver estas e mais peças.
tags: obsolete rails presentation

